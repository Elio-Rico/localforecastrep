* reproduce data in section 3:


clear all
set more off

cd "/Users/ebollige/Dropbox/1_1_replication_forecasters/localforecastrep/stata/"

* do file location:
local dofile = "`c(pwd)'"
disp "`dofile'" 
local parent = substr("`dofile'", 1, strrpos("`dofile'", "/")-1)

* Append the desired subfolder
local target = "`parent'/data"
global data "`target'"
local target = "`parent'/output"
global output "`target'"
local target = "`parent'/output/tables"
global tables "`target'"
local target = "`parent'/output/figures"
global figures "`target'"
local target = "`parent'/output/temp_data"
global temp_data "`target'"


* switch to data directory:
cd $output
* Check



************************************
************************************
** 0. Summary statistics          **
************************************
************************************

use $data/baseline.dta, clear

replace Local = 1-Foreign
gen LocalSubsidiary = 0 if Local==0 | LocalHQ==1
replace LocalSubsidiary = 1 if Local==1 & LocalHQ==0

* half of the observations are generated by a forecaster that provides forecasts for both local and foreign countries in a given period
sum locfor, det
* 60% of the observations are generated by a forecaster that provides forecasts for both local and foreign countries (at some point)
sum LocFor, det
sum LocForHQ, det

sum Foreign ForeignHQ

sum LocFor if Multinational==1
sum LocFor if Multinational==0

graph bar (mean) Foreign LocalSubsidiary LocalHQ if gdp_current!=., stack legend(label(1 "No headquarter, no subsidiary in country") label(2 "Subsidiary in country") label(3 "Headquarters in country") pos(6)) title("Share of observations") over(country, sort((mean) Foreign) lab(angle(vertical)))

gen ForeignMult = Foreign*Multinational
gen ForeignNat = Foreign*(1-Multinational)
gen LocalHQMult = LocalHQ*Multinational
gen LocalHQNat = LocalHQ*(1-Multinational)

graph bar (mean) ForeignNat ForeignMult LocalSubsidiary LocalHQNat LocalHQMult if gdp_current!=., stack legend(label(1 "No headquarter, no subsidiary in country (National forecaster)") label(2 "No headquarter, no subsidiary in country (Multinational forecaster)") label(3 "Subsidiary in country") label(4 "Headquarters in country (National forecaster)") label(5 "Headquarters in country(Multinational forecaster)") pos(6)) title("Share of observations") over(country, sort((mean) Foreign) lab(angle(vertical))) bar(1,color(blue) fintensity(inten30)) bar(2,color(blue)) bar(3,color(red)) bar(4,color(green) fintensity(inten30)) bar(5,color(green))
graph export "$figures//hq_sub_obs_by_cty.pdf", as(pdf) replace

graph hbar (sum) Foreign LocalSubsidiary LocalHQ if gdp_current!=., stack legend(label(1 "No headquarter, no subsidiary in country") label(2 "Subsidiary in country") label(3 "Headquarters in country") pos(6)) title("a) Observations") over(Multinational) xsize(4)
graph export "$figures//hq_sub_obs.pdf", as(pdf) replace

preserve
collapse (mean) Foreign LocalSubsidiary LocalHQ if gdp_current!=., by(idci LocFor Multinational)
graph hbar (sum) Foreign LocalSubsidiary LocalHQ, stack legend(label(1 "No headquarter, no subsidiary in country") label(2 "Subsidiary in country") label(3 "Headquarters in country") pos(6)) title("b) Country-forecaster pairs") over(Multinational) xsize(4)
graph export "$figures//hq_sub_pairs.pdf", as(pdf) replace
restore

* Local and foreign (taking into account subsidiaries)

preserve
collapse (mean) Local Foreign LocalHQ ForeignHQ N_cty2 LocFor (count) N=gdp_current if gdp_current!=., by(institution Multinational)
gen locfor = 1 if Local>0 & Foreign>0 
replace Local=. if locfor==1
replace Foreign=. if locfor==1
* 86 forecasters provide forecasts for both local and foreign countries
unique institution if  locfor==1
* that's 11% of all forecasters (86/748)
unique institution
gen locforHQ = 1 if LocalHQ>0 & ForeignHQ>0 
replace LocalHQ=. if locforHQ==1
replace ForeignHQ=. if locforHQ==1
* 105 forecasters provide forecasts for both local and foreign countries with alternative definition
unique institution if  locforHQ==1
* that's 14% of all forecasters (105/748)
unique institution
gen N_cty = (N_cty2==1) if N_cty2!=.
bys Multinational: sum N_cty
gen N_cty4 = (N_cty2>4) if N_cty2!=.
bys Multinational: sum N_cty4
bys Multinational: sum N_cty2, det
hist N_cty2 if Multinational==1, xtitle("Number of countries") title("a) Multinational forecasters") percent d
graph export "$figures//hist_mult.pdf", as(pdf) replace
hist N_cty2 if Multinational==0, xtitle("Number of countries") title("b) National forecasters") percent d
graph export "$figures//hist_nat.pdf", as(pdf) replace
graph hbar (sum) Local Foreign locfor, stack legend(label(1 "Only Local") label(2 "Only Foreign") label(3 "Local and Foreign") pos(6)) title("a) Forecasters") over(Multinational) xsize(4)
graph export "$figures//loc_for_inst.pdf", as(pdf) replace
restore

preserve
collapse (mean) Local Foreign (count) N=gdp_current if gdp_current!=., by(institution Multinational)
gen locfor = 1 if Local>0 & Foreign>0
replace Local=. if locfor==1
replace Foreign=. if locfor==1
graph hbar (sum) Local Foreign locfor [fweight=N], stack legend(label(1 "Only Local") label(2 "Only Foreign") label(3 "Local and Foreign") pos(6)) title("b) Forecasters, weighted by obs.") over(Multinational) xsize(4)
graph export "$figures//loc_for_obs.pdf", as(pdf) replace
restore

* Local and foreign (ignoring subsidiaries)

preserve
collapse (mean) LocalHQ ForeignHQ (count) N=gdp_current if gdp_current!=., by(institution Multinational)
gen locfor = 1 if LocalHQ>0 & ForeignHQ>0 
replace LocalHQ=. if locfor==1
replace ForeignHQ=. if locfor==1
unique institution if  locfor==1
graph hbar (sum) LocalHQ ForeignHQ locfor, stack legend(label(1 "Only Local") label(2 "Only Foreign") label(3 "Local and Foreign") pos(6)) title("Forecasters") over(Multinational) xsize(4)
graph export "$figures//loc_for_inst2.pdf", as(pdf) replace
restore

preserve
collapse (mean) LocalHQ ForeignHQ (count) N=gdp_current if gdp_current!=., by(institution Multinational)
gen locfor = 1 if LocalHQ>0 & ForeignHQ>0 
replace LocalHQ=. if locfor==1
replace ForeignHQ=. if locfor==1
graph hbar (sum) LocalHQ ForeignHQ locfor [fweight=N], stack legend(label(1 "Only Local") label(2 "Only Foreign") label(3 "Local and Foreign") pos(6)) title("Forecasters, weighted by obs.") over(Multinational) xsize(4)
graph export "$figures//loc_for_obs2.pdf", as(pdf) replace
restore



************************************
************************************
** 1. Foreigners make more errors **
************************************
************************************


* --------------------------
**# Variance equality tests 
* --------------------------

use $data/baseline.dta, clear


* new industry variable:
g Industry8 = Industry7 == 2 | Industry7 == 3 
replace Industry8 = . if Industry7 == .
label define i8 0 "Non-Financial" 1 "Financial", modify
label values Industry8 i8


foreach var in cpi gdp {

foreach hor in current future {		
	
preserve

	collapse FE_`var'_`hor'_a1 Emerging Foreign Multinational N_cty2 Industry8, by(year idi country_num)
	
	
	if "`var'" == "cpi" {
		
		local variable "CPI"
	}
	else if "`var'" == "gdp" {
		
		local variable "GDP"
	}
	
	
	if "`hor'" == "current" {
		
		local temps "t"
	}
	else if "`hor'" == "future"{
		
		local temps "t+1"
	}

	* columns in table:
	g variable = ""
	g indicator = ""
	g nlocal 	= .
	g nforeign 	= . 
	g sdlocal 	= .
	g sdforeign = .
	g ftest 	= .
	g pvalue	= .
	
	* robvar
	g w10		= .	
	g p_w10		= .	
	g w50		= .	
	g p_w50		= .	
	g w0		= .	
	g p_w0		= .	
	
	
	
	replace variable  = " $ \text{`variable'}_{`temps'} $ "					if _n == 1
	
	* replace indicator:
	replace indicator = "All sample" 					if _n == 1
	replace indicator = "Advanced Economies"			if _n == 2
	replace indicator = "Emerging Economies"			if _n == 3
	replace indicator = "Multinatonal firms"				if _n == 4
	replace indicator = "National firms"					if _n == 5
	replace indicator = "Financial Sector"			if _n == 6
	replace indicator = "Non-Fincial Sector"		if _n == 7	
	replace indicator = "$< 20$ countries"			if _n == 8
	replace indicator = "$\geq 20$ countries"		if _n == 9
	replace indicator = "Pre-Crisis"				if _n == 10
	replace indicator = "Post-Crisis"				if _n == 11	


	* Overall SD Test:
	sdtest FE_`var'_`hor'_a1, by(Foreign)
	
	
	* TABLE VALUES
	replace nlocal		= r(df_1) + 1  					if _n == 1
	replace nforeign	= r(df_2) + 1 					if _n == 1
	replace sdlocal 	= round(r(sd_1),.01)			if _n == 1
	replace sdforeign	= round(r(sd_2),.01)			if _n == 1
	replace ftest 		= round(r(F),.01) 				if _n == 1
	replace pvalue 		= round(r(p_l),.001) 			if _n == 1
	* robvar:
	robvar FE_`var'_`hor'_a1, by(Foreign)
	
	replace w10 		= round(r(w10),.01) 			if _n == 1
	replace p_w10 		= round(r(p_w10),.001) 			if _n == 1
	replace w50 		= round(r(w50),.01) 			if _n == 1
	replace p_w50 		= round(r(p_w50),.001) 			if _n == 1
	replace w0 			= round(r(w0),.01) 				if _n == 1
	replace p_w0 		= round(r(p_w0),.001) 			if _n == 1
	
	* Developed
	sdtest FE_`var'_`hor'_a1 if Emerging==0, by(Foreign)
	
	* TABLE VALUES
	replace nlocal		= r(df_1) + 1  					if _n == 2
	replace nforeign	= r(df_2) + 1 					if _n == 2
	replace sdlocal 	= round(r(sd_1),.01)			if _n == 2
	replace sdforeign	= round(r(sd_2),.01)			if _n == 2
	replace ftest 		= round(r(F),.01) 				if _n == 2
	replace pvalue 		= round(r(p_l),.001) 			if _n == 2
	
	* robvar:
	robvar FE_`var'_`hor'_a1 if Emerging==0, by(Foreign)
	
	replace w10 		= round(r(w10),.01) 			if _n == 2
	replace p_w10 		= round(r(p_w10),.001) 			if _n == 2
	replace w50 		= round(r(w50),.01) 			if _n == 2
	replace p_w50 		= round(r(p_w50),.001) 			if _n == 2
	replace w0 			= round(r(w0),.01) 				if _n == 2
	replace p_w0 		= round(r(p_w0),.001) 			if _n == 2
	
	* Emerging
	sdtest FE_`var'_`hor'_a1 if Emerging==1, by(Foreign)
	
	
	* TABLE VALUES
	replace nlocal		= r(df_1) + 1  					if _n == 3
	replace nforeign	= r(df_2) + 1 					if _n == 3
	replace sdlocal 	= round(r(sd_1),.01)			if _n == 3
	replace sdforeign	= round(r(sd_2),.01)			if _n == 3
	replace ftest 		= round(r(F),.01) 				if _n == 3
	replace pvalue 		= round(r(p_l),.001) 			if _n == 3
	
	* robvar:
	robvar FE_`var'_`hor'_a1 if Emerging==1, by(Foreign)
	
	replace w10 		= round(r(w10),.01) 			if _n == 3
	replace p_w10 		= round(r(p_w10),.001) 			if _n == 3
	replace w50 		= round(r(w50),.01) 			if _n == 3
	replace p_w50 		= round(r(p_w50),.001) 			if _n == 3
	replace w0 			= round(r(w0),.01) 				if _n == 3
	replace p_w0 		= round(r(p_w0),.001) 			if _n == 3
	
	*  Multinational
	sdtest FE_`var'_`hor'_a1 if Multinational==1, by(Foreign)
	
	
	* TABLE VALUES
	replace nlocal		= r(df_1) + 1  					if _n == 4
	replace nforeign	= r(df_2) + 1 					if _n == 4
	replace sdlocal 	= round(r(sd_1),.01)			if _n == 4
	replace sdforeign	= round(r(sd_2),.01)			if _n == 4
	replace ftest 		= round(r(F),.01) 				if _n == 4
	replace pvalue 		= round(r(p_l),.001) 			if _n == 4
	
		* robvar:
		robvar FE_`var'_`hor'_a1 if Multinational==1, by(Foreign)
	replace w10 		= round(r(w10),.01) 			if _n == 4
	replace p_w10 		= round(r(p_w10),.001) 			if _n == 4
	replace w50 		= round(r(w50),.01) 			if _n == 4
	replace p_w50 		= round(r(p_w50),.001) 			if _n == 4
	replace w0 			= round(r(w0),.01) 				if _n == 4
	replace p_w0 		= round(r(p_w0),.001) 			if _n == 4
	
	* National
	sdtest FE_`var'_`hor'_a1 if Multinational==0, by(Foreign)
	
	
	* TABLE VALUES
	replace nlocal		= r(df_1) + 1  					if _n == 5
	replace nforeign	= r(df_2) + 1 					if _n == 5
	replace sdlocal 	= round(r(sd_1),.01)			if _n == 5
	replace sdforeign	= round(r(sd_2),.01)			if _n == 5
	replace ftest 		= round(r(F),.01) 				if _n == 5
	replace pvalue 		= round(r(p_l),.001) 			if _n == 5
		
	* robvar:
	robvar FE_`var'_`hor'_a1 if Multinational==0, by(Foreign)
	
	replace w10 		= round(r(w10),.01) 			if _n == 5
	replace p_w10 		= round(r(p_w10),.001) 			if _n == 5
	replace w50 		= round(r(w50),.01) 			if _n == 5
	replace p_w50 		= round(r(p_w50),.001) 			if _n == 5
	replace w0 			= round(r(w0),.01) 				if _n == 5
	replace p_w0 		= round(r(p_w0),.001) 			if _n == 5
	
	* Industry Financial
	sdtest FE_`var'_`hor'_a1 if Industry8 == 1, by(Foreign)
	
	
	* TABLE VALUES
	replace nlocal		= r(df_1) + 1  					if _n == 6
	replace nforeign	= r(df_2) + 1 					if _n == 6
	replace sdlocal 	= round(r(sd_1),.01)			if _n == 6
	replace sdforeign	= round(r(sd_2),.01)			if _n == 6
	replace ftest 		= round(r(F),.01) 				if _n == 6
	replace pvalue 		= round(r(p_l),.001) 			if _n == 6
	
		* robvar:
	robvar FE_`var'_`hor'_a1 if Industry8 == 1, by(Foreign)
	
	replace w10 		= round(r(w10),.01) 			if _n == 6
	replace p_w10 		= round(r(p_w10),.001) 			if _n == 6
	replace w50 		= round(r(w50),.01) 			if _n == 6
	replace p_w50 		= round(r(p_w50),.001) 			if _n == 6
	replace w0 			= round(r(w0),.01) 				if _n == 6
	replace p_w0 		= round(r(p_w0),.001) 			if _n == 6
	
	* Industry Non-Financial
	sdtest FE_`var'_`hor'_a1 if Industry8 == 0, by(Foreign)
	
	
	* TABLE VALUES
	replace nlocal		= r(df_1) + 1  					if _n == 7
	replace nforeign	= r(df_2) + 1 					if _n == 7
	replace sdlocal 	= round(r(sd_1),.01)			if _n == 7
	replace sdforeign	= round(r(sd_2),.01)			if _n == 7
	replace ftest 		= round(r(F),.01) 				if _n == 7
	replace pvalue 		= round(r(p_l),.001) 			if _n == 7		

	* robvar:
	robvar FE_`var'_`hor'_a1  if Industry8 == 0, by(Foreign)
	
	replace w10 		= round(r(w10),.01) 			if _n == 7
	replace p_w10 		= round(r(p_w10),.001) 			if _n == 7
	replace w50 		= round(r(w50),.01) 			if _n == 7
	replace p_w50 		= round(r(p_w50),.001) 			if _n == 7
	replace w0 			= round(r(w0),.01) 				if _n == 7
	replace p_w0 		= round(r(p_w0),.001) 			if _n == 7
	
	replace pvalue 		= 0.0001 if pvalue == 0	
	
	keep variable indicator nlocal nforeign sdlocal sdforeign ftest pvalue 	w10	p_w10 w50 p_w50 w0 p_w0

	
	
	*drop if _n > 11
	drop if _n > 7
	
	*save `var'_`hor'_sdtest.dta, replace
	save "$temp_data/`var'_`hor'_sdtest_robvar.dta", replace
	

	
restore

}
}


preserve

* current
use $temp_data/cpi_current_sdtest_robvar.dta, clear

append using $temp_data/gdp_current_sdtest_robvar.dta


save $temp_data/cpi_gdp_current_sdtest_robvar.dta, replace

* future
use $temp_data/cpi_future_sdtest_robvar.dta, clear

append using $temp_data/gdp_future_sdtest_robvar.dta

save $temp_data/cpi_gdp_future_sdtest_robvar.dta, replace

restore


preserve



*All together
preserve

* current
use $temp_data/cpi_gdp_current_sdtest_robvar.dta, clear

append using $temp_data/cpi_gdp_future_sdtest_robvar.dta

save $temp_data/cpi_gdp_current_future_sdtest_robvar.dta, replace

restore

foreach var in cpi gdp {
	
	foreach hor in current future {
		
		capture erase $temp_data/`var'_`hor'_sdtest_robvar.dta 
		
	}
}


foreach hor in current future {
	
	capture erase $temp_data/cpi_gdp_`hor'_sdtest.dta
}


*All together

use $temp_data/cpi_gdp_current_future_sdtest_robvar.dta, clear


g nlocals = string(nlocal,"%15.0fc")
g nforeigns = string(nforeign,"%15.0fc")
g sdlocals = string(sdlocal,"%9.2f")
g sdforeigns = string(sdforeign,"%9.2f")

g ftests = string(w10,"%9.2f")
g pvalues = string(p_w10,"%9.4f")

replace pvalues = string(p_w10,"%9.3f")
g tag = pvalues == "0.000"
replace pvalues = "$< 0.001$" if tag == 1
	

label var variable "Variable"
label var indicator "Sample"
label var nlocals " $ N $ Local"
label var nforeigns " $ N $ Foreign"
label var sdlocals " $ \sigma_\text{Local} $"
label var sdforeigns " $\sigma_\text{Foreign} $"
label var ftests "F-test"
label var pvalues "p-value"

texsave variable indicator nlocals nforeigns sdlocals sdforeigns ftests pvalues  using "$tables/cpi_gdp_current_future_sdtest_robvar.tex", ///
	title(Test for differences in Variance of Forecast Error) varlabels nofix hlines(0) headersep(0pt) autonumber ///
	frag  size(footnotesize)  align(llCCCCCC) location(H) footnote(		"\begin{minipage}{1\textwidth} \vspace{-10pt} \begin{tabnote} \textit{Notes:} The table shows Levene's variance equality test applied to the forecast errors of local and foreign forecasters. The Null hypothesis posits that the variance of the forecast errors made by local forecasters is equal to the  variance of the forecast errors made by foreign forecasters. The alternative hypothesis is that the variances are not equal. In the rows we report the test statistics for different subsamples. \end{tabnote} \end{minipage}  ") label(tab:error_sdtest)  replace



* --------------------------
**# KDENSITY FIGURES 
* --------------------------

use $data/baseline.dta, clear

* Residuals
foreach hor in current future {
	foreach var in gdp cpi {
		
		reghdfe FE_`var'_`hor'_a1, absorb(datem#country_num datem#idi) resid
		predict res_FE_`var'_`hor'_a1, res
		
	}
}


label var gdp_current_a1 "Current GDP"
label var cpi_current_a1 "Current CPI"
label var gdp_future_a1 "Future GDP"
label var cpi_future_a1 "Future CPI"


label var res_FE_gdp_current_a1 "Current GDP"
label var res_FE_cpi_current_a1 "Current CPI"
label var res_FE_gdp_future_a1 "Future GDP"
label var res_FE_cpi_future_a1 "Future CPI"


foreach hor in current future {
	foreach var in gdp cpi {
		
		local rnge -4 4
			
		local vtext : variable label `var'_`hor'_a1
			
		twoway (kdensity FE_`var'_`hor'_a1 if Foreign ==0 , range(`rnge') color("10 63 92") lpattern(dash) ///
				fintensity(inten100) xlabel(-4(1)4,grid gstyle(dot)) ylabel(,grid gstyle(dot)) ) ///
				(kdensity FE_`var'_`hor'_a1  if Foreign==1  , range(`rnge') color("255 99 97") ///
				fintensity(inten100) xlabel(-4(1)4,grid gstyle(dot)) ylabel(,grid gstyle(dot)) ), ///
				legend(size(small) label(1 "Local") label(2 "Foreign") position(0) bplacement(neast) ) ///
				ytitle("Kernel density") xtitle("") graphregion(fcolor(white)  lcolor(white))  ///
				bgcolor(white)
				
		graph export "$figures//`var'_`hor'_FE_density.pdf", as(pdf) replace

		foreach x in    res  {		
		
		twoway (kdensity `x'_FE_`var'_`hor'_a1 if Foreign==0 , range(`rnge') color("10 63 92") lpattern(dash) ///
				fintensity(inten100) xlabel(-4(1)4,grid gstyle(dot)) ylabel(,grid gstyle(dot)) ) ///
				(kdensity `x'_FE_`var'_`hor'_a1  if Foreign==1  , range(`rnge') color("255 99 97") ///
				fintensity(inten100) xlabel(-4(1)4,grid gstyle(dot)) ylabel(,grid gstyle(dot)) ), ///
				legend(size(small) label(1 "Local") label(2 "Foreign") position(0) bplacement(neast) ) ///
				ytitle("Kernel density") xtitle("") graphregion(fcolor(white)  lcolor(white)) ///
				bgcolor(white)
				
		graph export "$figures//`x'_`var'_`hor'_FE_density.pdf", as(pdf) replace
		}		
	}
}


* ----------------------
**# Information updating
* ----------------------

use $data/baseline.dta, clear

sort idci datem
xtset idci datem
gen update_cpi_current = 1 if cpi_current!=.
gen update_cpi_future = 1 if cpi_future!=.
gen update_gdp_current = 1 if gdp_current!=.
gen update_gdp_future = 1 if gdp_future!=.

replace update_cpi_current = 0 if l.cpi_current == cpi_current & month != 1
replace update_cpi_current = 0 if l.cpi_future == cpi_current & month == 1
replace update_gdp_current = 0 if l.gdp_current == gdp_current & month != 1
replace update_gdp_current = 0 if l.gdp_current == gdp_current & month == 1
replace update_cpi_future = 0 if l.cpi_future == cpi_future & month != 1
replace update_gdp_future = 0 if l.gdp_future == gdp_future & month != 1

sum update* if Foreign==0
sum update* if Foreign==1

use $data/baseline.dta, clear

preserve
collapse (count) cpi_current gdp_current cpi_future gdp_future, by(country country_num idi idci year Foreign LocFor)

sum cpi_current gdp_current cpi_future gdp_future

* histograms
label var cpi_current "Number of yearly current CPI updates"
label var gdp_current "Number of yearly current GDP updates"
label var cpi_future "Number of yearly future CPI updates"
label var gdp_future "Number of yearly future GDP updates"
hist cpi_current
graph export "$figures//hist_update_cpi_current.pdf", as(pdf) replace
hist gdp_current
graph export "$figures//hist_update_gdp_current.pdf", as(pdf) replace
hist cpi_future
graph export "$figures//hist_update_cpi_future.pdf", as(pdf) replace
hist gdp_future
graph export "$figures//hist_update_gdp_future.pdf", as(pdf) replace

foreach hor in current future {
	foreach var in cpi gdp  {
		
		local rnge 0 12
			
		*preserve
		*collapse FE_`var'_`hor'_a1 `var'_`hor'_a1 Emerging Foreign Multinational N_cty2, by(year idi country_num)
		local vtext : variable label `var'_`hor'
			
		twoway (hist `var'_`hor' if Foreign ==0 , color(blue%30) frac ///
				fintensity(inten100) xlabel(0(2)12,grid gstyle(dot)) ylabel(,grid gstyle(dot)) ) ///
				(hist `var'_`hor'  if Foreign==1  ,  color(red%30) frac ///
				fintensity(inten100) xlabel(0(2)12,grid gstyle(dot)) ylabel(,grid gstyle(dot)) ), ///
				legend(size(small) label(1 "Local") label(2 "Foreign") position(0) bplacement(nwest) ) ///
				ytitle("Kernel density") xtitle("") graphregion(fcolor(white)  lcolor(white))  ///
				bgcolor(white)
				
		graph export "$figures//`var'_`hor'_N_density.pdf", as(pdf) replace
	
	}
}

replace cpi_current = log(cpi_current)
replace gdp_current = log(gdp_current)
replace cpi_future = log(cpi_future)
replace gdp_future = log(gdp_future)

* regressions

foreach var in cpi gdp {
	foreach hor in current future {

		reghdfe `var'_`hor' Foreign, absorb(idi#year country_num#year) vce(cluster country_num idi)
regsave using "$temp_data/reg_update_`var'_`hor'_FE1.dta", replace  ///
	addlabel(FE1, "", FE2, "\checkmark", FE3, "\checkmark", FE4, "", FE5, "", FE6, "", FE7, "")  table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))

	* robustness
		reghdfe `var'_`hor' Foreign, noabsorb vce(cluster country_num idi)
regsave using "$temp_data/reg_update_`var'_`hor'_FE1_rob.dta", replace  ///
	addlabel(FE1, "", FE2, "", FE3, "", FE4, "")  table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
		reghdfe `var'_`hor' Foreign, absorb(country_num) vce(cluster country_num idi)
regsave using "$temp_data/reg_update_`var'_`hor'_FE1_rob.dta", append  ///
	addlabel(FE1, "\checkmark", FE2, "", FE3, "", FE4, "")  table(col_2, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
		reghdfe `var'_`hor' Foreign, absorb(country_num idi) vce(cluster country_num idi)
regsave using "$temp_data/reg_update_`var'_`hor'_FE1_rob.dta", append  ///
	addlabel(FE1, "\checkmark", FE2, "\checkmark", FE3, "", FE4, "")  table(col_3, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
		reghdfe `var'_`hor' Foreign, absorb(country_num#year idi) vce(cluster country_num idi)
regsave using "$temp_data/reg_update_`var'_`hor'_FE1_rob.dta", append  ///
	addlabel(FE1, "", FE2, "\checkmark", FE3, "\checkmark", FE4, "")  table(col_4, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
		reghdfe `var'_`hor' Foreign, absorb(idi#year country_num#year) vce(cluster country_num idi)
regsave using "$temp_data/reg_update_`var'_`hor'_FE1_rob.dta", append  ///
	addlabel(FE1, "", FE2, "", FE3, "\checkmark", FE4, "\checkmark")  table(col_5, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
	
	}
}

restore


preserve
sort idci datem
xtset idci datem
replace cpi_current = . if l.cpi_current == cpi_current & month != 1
replace cpi_current = . if l.cpi_future == cpi_current & month == 1
replace gdp_current = . if l.gdp_current == gdp_current & month != 1
replace gdp_current = . if l.gdp_current == gdp_current & month == 1
replace cpi_future = . if l.cpi_future == cpi_future & month != 1
replace gdp_future = . if l.gdp_future == gdp_future & month != 1
collapse (count) cpi_current gdp_current cpi_future gdp_future, by(country country_num idi idci year Foreign LocFor)
* histograms
label var cpi_current "Number of yearly current CPI updates"
label var gdp_current "Number of yearly current GDP updates"
label var cpi_future "Number of yearly future CPI updates"
label var gdp_future "Number of yearly future GDP updates"
hist cpi_current
graph export "$figures//hist_update_cpi_current2.pdf", as(pdf) replace
hist gdp_current
graph export "$figures//hist_update_gdp_current2.pdf", as(pdf) replace
hist cpi_current
graph export "$figures//hist_update_cpi_future2.pdf", as(pdf) replace
hist gdp_current
graph export "$figures//hist_update_gdp_future2.pdf", as(pdf) replace

foreach hor in current future {
	foreach var in cpi gdp  {
		
		local rnge 0 12
			
		*preserve
		*collapse FE_`var'_`hor'_a1 `var'_`hor'_a1 Emerging Foreign Multinational N_cty2, by(year idi country_num)
		local vtext : variable label `var'_`hor'
			
		twoway (hist `var'_`hor' if Foreign ==0 , color(blue%30)  ///
				fintensity(inten100) xlabel(0(2)12,grid gstyle(dot)) ylabel(,grid gstyle(dot)) ) ///
				(hist `var'_`hor'  if Foreign==1  ,  color(red%30) ///
				fintensity(inten100) xlabel(0(2)12,grid gstyle(dot)) ylabel(,grid gstyle(dot)) ), ///
				legend(size(small) label(1 "Local") label(2 "Foreign") position(0) bplacement(nwest) ) ///
				ytitle("Kernel density") xtitle("") graphregion(fcolor(white)  lcolor(white))  ///
				bgcolor(white)
				
		graph export "$figures//`var'_`hor'_N_density2.pdf", as(pdf) replace
	
	}
}

replace cpi_current = log(cpi_current)
replace gdp_current = log(gdp_current)
replace cpi_future = log(cpi_future)
replace gdp_future = log(gdp_future)
* regressions
foreach var in cpi gdp {
	foreach hor in current future {
	
		reghdfe `var'_`hor' Foreign, absorb(idi#year country_num#year) vce(cluster country_num idi)
regsave using "$temp_data/reg_update_`var'_`hor'_FE2.dta", replace  ///
	addlabel(FE1, "", FE2, "\checkmark", FE3, "\checkmark", FE4, "", FE5, "", FE6, "\checkmark", FE7, "")  table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))

	}
}

restore


* combine results for cpi and gdp:
use $temp_data/reg_update_cpi_current_FE1.dta, clear
g database = 1
append using $temp_data/reg_update_gdp_current_FE1
replace database = 2 if database == .
append using $temp_data/reg_update_cpi_future_FE1
replace database = 3 if database == .
append using $temp_data/reg_update_gdp_future_FE1
replace database = 4 if database == .
g n = _n
rename col_1 col_1

save $temp_data/reg_update_cpi_gdp_current_future_FE1.dta, replace

use $temp_data/reg_update_cpi_current_FE2.dta, clear
g database = 1
append using $temp_data/reg_update_gdp_current_FE2
replace database = 2 if database == .
append using $temp_data/reg_update_cpi_future_FE2
replace database = 3 if database == .
append using $temp_data/reg_update_gdp_future_FE2
replace database = 4 if database == .
g n = _n
rename col_1 col_2

save $temp_data/reg_update_cpi_gdp_current_future_FE2.dta, replace

* merge results to have wide table:
use $temp_data/reg_update_cpi_gdp_current_future_FE1.dta, clear
merge 1:1 database n using $temp_data/reg_update_cpi_gdp_current_future_FE2
drop _merge

* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

drop if var == "rhs"
drop database n
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - (7 +3)
drop n noverall

replace var = "Country, For., Month FE" if var == "FE1"
replace var = "Country $ \times $ Year FE" if var == "FE2"
replace var = "Forecaster $ \times $ Year FE " if var == "FE3"
replace var = "Country $ \times $ Date FE" if var == "FE4"
replace var = "Forecaster $ \times $ Date FE " if var == "FE5"
replace var = "Subsample 1" if var == "FE6"
replace var = "Subsample 2" if var == "FE7"


* Fill up indicator variable:
gen indicator = ""
replace indicator = "$\text{CPI}_t$" if _n==1
replace indicator = "$\text{GDP}_t$" if _n==5
replace indicator = "$\text{CPI}_{t+1}$" if _n==9
replace indicator = "$\text{GDP}_{t+1}$" if _n==13

order indicator var col_1-col_2

label var indicator "Variable"
label var var "Coefficient"
label var col_1 ""
label var col_2 ""

save $temp_data/reg_updating, replace




*----------------------------------------
**# REGRESSIONS OF STANDARD DEVIATION:
*----------------------------------------

use $data/baseline.dta, clear

*use "/Users/ebollige/Dropbox/4Foreign vs local expectations/EmpiricalResults/Kenza/TempE.dta",clear

foreach hor in current future {
foreach var in cpi gdp {
	
	
	egen N_FE_`var'_`hor' = count(FE_`var'_`hor'_a1), by(idci month)
	
	preserve
		collapse (sd) FE_`var'_`hor'_a1 if N_FE_`var'_`hor'>=10, by(idci country_num idi Foreign month Emerging country LocFor)

		
		sum FE_`var'_`hor'_a1 if Foreign==0
		
		local se cluster country_num idi
		gen l_`hor' = log(FE_`var'_`hor'_a1)
		
		
		if "`var'" == "cpi" {
			if "`hor'" == "current" {
			local capvar " $ \text{CPI}_{t} $ "
			}
			else if "`hor'" == "future" {			
			local capvar " $ \text{CPI}_{t+1} $ "
			}
		}
			else if  "`var'" == "gdp" {
			if "`hor'" == "current" {
			local capvar " $ \text{GDP}_{t} $ "
			}
			else if "`hor'" == "future" {
			local capvar " $ \text{GDP}_{t+1} $ "
			}
		}
		
			
		local se  cluster idi country_num
		local FE idi country_num month
		
		reghdfe l_`hor' Foreign, absorb(`FE') vce(`se')
		regsave using "$temp_data/stderr_`var'_l_`hor'_FE", replace  ///
			addlabel(rhs,"`capvar'" , FE1, "\checkmark", FE2, "", FE3, "", FE4, "", FE5, "", FE6, "", FE7, "") table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
		
		* Robustness:
		reghdfe l_`hor' Foreign, noabsorb vce(`se')
		regsave using "$temp_data/stderr_`var'_`hor'_FE_rob", replace  ///
			addlabel(rhs,"`capvar'" , FE1, "", FE2, "", FE3, "") table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))			
		reghdfe l_`hor' Foreign, absorb(country_num) vce(`se')
		regsave using "$temp_data/stderr_`var'_`hor'_FE_rob", append  ///
			addlabel(rhs,"`capvar'" , FE1, "\checkmark", FE2, "", FE3, "") table(col_2, asterisk(10 5 1) parentheses(stderr) format(%7.2f))	
		reghdfe l_`hor' Foreign, absorb(country_num idi) vce(`se')
		regsave using "$temp_data/stderr_`var'_`hor'_FE_rob", append  ///
			addlabel(rhs,"`capvar'" , FE1, "\checkmark", FE2, "\checkmark", FE3, "") table(col_3, asterisk(10 5 1) parentheses(stderr) format(%7.2f))	
		reghdfe l_`hor' Foreign, absorb(`FE') vce(`se')
		regsave using "$temp_data/stderr_`var'_`hor'_FE_rob", append  ///
			addlabel(rhs,"`capvar'" , FE1, "\checkmark", FE2, "\checkmark", FE3, "\checkmark") table(col_4, asterisk(10 5 1) parentheses(stderr) format(%7.2f))		
			
	restore

}
}


* combine results for cpi and gdp:
use $temp_data/stderr_cpi_l_current_FE.dta, clear
g database = 1
append using $temp_data/stderr_gdp_l_current_FE
replace database = 2 if database == .
append using $temp_data/stderr_cpi_l_future_FE
replace database = 3 if database == .
append using $temp_data/stderr_gdp_l_future_FE
replace database = 4 if database == .
g n = _n
rename col_1 col_3
	
* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

* Fill up indicator variable:
gen indicator = col_3 if var == "rhs"
qui sort database indicator
by database indicator: replace indicator = indicator[_n-1] if indicator == "" 
qui gsort database -indicator
by database : replace indicator = indicator[_n-1] if indicator == ""

sort database n
bysort database: g count = _n 
replace indicator = "" if count >1

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - (7 +3)
drop database n count noverall

drop if var == "rhs"
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

replace var = "Country, For., Month FE" if var == "FE1"
replace var = "Country $ \times $ Year FE" if var == "FE2"
replace var = "Forecaster $ \times $ Year FE " if var == "FE3"
replace var = "Country $ \times $ Date FE" if var == "FE4"
replace var = "Forecaster $ \times $ Date FE " if var == "FE5"
replace var = "Subsample 1" if var == "FE6"
replace var = "Subsample 2" if var == "FE7"

order indicator

label var indicator "Variable"
label var var "Coefficient"
label var col_3 ""

save $temp_data/reg_lsd, replace


* ----------------------
**# Regressions log(abs)
* ----------------------

use $data/baseline.dta, clear

sum abs_FE_cpi_current_a1 abs_FE_gdp_current_a1 abs_FE_cpi_future_a1 abs_FE_gdp_future_a1 if Foreign==0


foreach var in cpi gdp {
	
	foreach hor in current future {
		
		*replace labs_FE_`var'_`hor'_a1 = max(-5,labs_FE_`var'_`hor'_a1) if labs_FE_`var'_`hor'_a1!=.
		*replace labs_FE_`var'_`hor'_a1 = -5 if FE_`var'_`hor'_a1==0
		
		if "`hor'" == "current" {
			local time "t"
		}
		else if "`hor'" == "future"{
			local time "t+1"
		}
		
		if "`var'" == "cpi" {
			local capvar " $ \text{CPI}_{`time'} $ "
		}
		else if  "`var'" == "gdp" {
			local capvar " $ \text{GDP}_{`time'} $ "
		}
		
		
		* clustering
		local se cluster country_num  idi datem
		
		* Fixed Effects:
		local FE country_num#datem idi#datem 
		reghdfe labs_FE_`var'_`hor'_a1 Foreign, absorb(`FE') vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE", replace  ///
			addlabel(rhs,"`capvar'" , FE1, "", FE2, "", FE3, "", FE4, "\checkmark", FE5, "\checkmark", FE6, "", FE7, "") table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))

		* Robustness:
		reghdfe labs_FE_`var'_`hor'_a1 Foreign, noabsorb vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE_rob", replace  ///
			addlabel(rhs,"`capvar'" , FE1, "", FE2, "", FE3, "", FE4, "") table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))			
		reghdfe labs_FE_`var'_`hor'_a1 Foreign, absorb(country_num) vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE_rob", append  ///
			addlabel(rhs,"`capvar'" , FE1, "\checkmark", FE2, "", FE3, "", FE4, "") table(col_2, asterisk(10 5 1) parentheses(stderr) format(%7.2f))	
		reghdfe labs_FE_`var'_`hor'_a1 Foreign, absorb(country_num idi) vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE_rob", append  ///
			addlabel(rhs,"`capvar'" , FE1, "\checkmark", FE2, "\checkmark", FE3, "", FE4, "") table(col_3, asterisk(10 5 1) parentheses(stderr) format(%7.2f))	
		reghdfe labs_FE_`var'_`hor'_a1 Foreign, absorb(country_num#datem idi) vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE_rob", append  ///
			addlabel(rhs,"`capvar'" , FE1, "", FE2, "\checkmark", FE3, "\checkmark", FE4, "") table(col_4, asterisk(10 5 1) parentheses(stderr) format(%7.2f))				
		reghdfe labs_FE_`var'_`hor'_a1 Foreign, absorb(country_num#datem idi#datem) vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE_rob", append  ///
			addlabel(rhs,"`capvar'" , FE1, "", FE2, "", FE3, "\checkmark", FE4, "\checkmark") table(col_5, asterisk(10 5 1) parentheses(stderr) format(%7.2f))				
			}
}


* combine results for cpi and gdp:
use $temp_data/reg_labs_cpi_current_FE.dta, clear
g database = 1
append using $temp_data/reg_labs_gdp_current_FE
replace database = 2 if database == .
append using $temp_data/reg_labs_cpi_future_FE
replace database = 3 if database == .
append using $temp_data/reg_labs_gdp_future_FE
replace database = 4 if database == .
g n = _n
rename col_1 col_4
	
* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

* Fill up indicator variable:
gen indicator = col_4 if var == "rhs"
qui sort database indicator
by database indicator: replace indicator = indicator[_n-1] if indicator == "" 
qui gsort database -indicator
by database : replace indicator = indicator[_n-1] if indicator == ""

sort database n
bysort database: g count = _n 
replace indicator = "" if count >1

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - (7 +3)

drop if var == "rhs"
drop database n count noverall
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

replace var = "Country, For., Month FE" if var == "FE1"
replace var = "Country $ \times $ Year FE" if var == "FE2"
replace var = "Forecaster $ \times $ Year FE " if var == "FE3"
replace var = "Country $ \times $ Date FE" if var == "FE4"
replace var = "Forecaster $ \times $ Date FE " if var == "FE5"
replace var = "Subsample 1" if var == "FE6"
replace var = "Subsample 2" if var == "FE7"

order indicator

label var indicator "Variable"
label var var "Coefficient"
label var col_4 ""

save $temp_data/reg_labs, replace


* --------------------------
**# Regressions log(abs) for non-multinationals
* ----------------------

use $data/baseline.dta, clear

sort idci datem
xtset idci datem

foreach var in cpi gdp {
	
	foreach hor in current future {
		
		if "`hor'" == "current" {
			local time "t"
		}
		else if "`hor'" == "future"{
			local time "t+1"
		}
		
		if "`var'" == "cpi" {
			local capvar " $ \text{CPI}_{`time'} $ "
		}
		else if  "`var'" == "gdp" {
			local capvar " $ \text{GDP}_{`time'} $ "
		}
		
		
		* Fixed Effects:
		local FE country_num#datem idi#datem 
		local se cluster country_num idi datem 
		reghdfe labs_FE_`var'_`hor'_a1 Foreign if Mult==0, absorb(`FE') vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE", replace  ///
			addlabel(rhs,"`capvar'" , FE1, "", FE2, "", FE3, "", FE4, "\checkmark", FE5, "\checkmark", FE6, "\checkmark", FE7, "") table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
			
	}
}



* combine results for cpi and gdp:
use $temp_data/reg_labs_cpi_current_FE.dta, clear
g database = 1
append using $temp_data/reg_labs_gdp_current_FE
replace database = 2 if database == .
append using $temp_data/reg_labs_cpi_future_FE
replace database = 3 if database == .
append using $temp_data/reg_labs_gdp_future_FE
replace database = 4 if database == .
g n = _n
rename col_1 col_5
	
* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

* Fill up indicator variable:
gen indicator = col_5 if var == "rhs"
qui sort database indicator
by database indicator: replace indicator = indicator[_n-1] if indicator == "" 
qui gsort database -indicator
by database : replace indicator = indicator[_n-1] if indicator == ""

sort database n
bysort database: g count = _n 
replace indicator = "" if count >1

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - (7 +3)

drop if var == "rhs"
drop database n count noverall
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

replace var = "Country, For., Month FE" if var == "FE1"
replace var = "Country $ \times $ Year FE" if var == "FE2"
replace var = "Forecaster $ \times $ Year FE " if var == "FE3"
replace var = "Country $ \times $ Date FE" if var == "FE4"
replace var = "Forecaster $ \times $ Date FE " if var == "FE5"
replace var = "Subsample 1" if var == "FE6"
replace var = "Subsample 2" if var == "FE7"

order indicator

label var indicator "Variable"
label var var "Coefficient"
label var col_5 ""

save $temp_data/reg_labs_non_mult, replace


* --------------------------
**# Regressions log(abs) for multinationals
* ----------------------

use $data/baseline.dta, clear

sort idci datem
xtset idci datem

foreach var in cpi gdp {
	
	foreach hor in current future {
		
		if "`hor'" == "current" {
			local time "t"
		}
		else if "`hor'" == "future"{
			local time "t+1"
		}
		
		if "`var'" == "cpi" {
			local capvar " $ \text{CPI}_{`time'} $ "
		}
		else if  "`var'" == "gdp" {
			local capvar " $ \text{GDP}_{`time'} $ "
		}
		
		
		* Fixed Effects:
		local FE country_num#datem idi#datem
		local se cluster country_num idi datem 
		reghdfe labs_FE_`var'_`hor'_a1 Foreign if Mult==1, absorb(`FE') vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE", replace  ///
			addlabel(rhs,"`capvar'" , FE1, "", FE2, "", FE3, "", FE4, "\checkmark", FE5, "\checkmark", FE6, "\checkmark", FE7, "") table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
			
	}
}



* combine results for cpi and gdp:
use $temp_data/reg_labs_cpi_current_FE.dta, clear
g database = 1
append using $temp_data/reg_labs_gdp_current_FE
replace database = 2 if database == .
append using $temp_data/reg_labs_cpi_future_FE
replace database = 3 if database == .
append using $temp_data/reg_labs_gdp_future_FE
replace database = 4 if database == .
g n = _n
rename col_1 col_6
	
* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

* Fill up indicator variable:
gen indicator = col_6 if var == "rhs"
qui sort database indicator
by database indicator: replace indicator = indicator[_n-1] if indicator == "" 
qui gsort database -indicator
by database : replace indicator = indicator[_n-1] if indicator == ""

sort database n
bysort database: g count = _n 
replace indicator = "" if count >1

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - (7 +3)

drop if var == "rhs"
drop database n count noverall
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

replace var = "Country, For., Month FE" if var == "FE1"
replace var = "Country $ \times $ Year FE" if var == "FE2"
replace var = "Forecaster $ \times $ Year FE " if var == "FE3"
replace var = "Country $ \times $ Date FE" if var == "FE4"
replace var = "Forecaster $ \times $ Date FE " if var == "FE5"
replace var = "Subsample 1" if var == "FE6"
replace var = "Subsample 2" if var == "FE7"

order indicator

label var indicator "Variable"
label var var "Coefficient"
label var col_6 ""

save $temp_data/reg_labs_mult, replace


* --------------------------
**# Regressions log(abs) for multinationals (role of subsidiaries)
* ----------------------

use $data/baseline.dta, clear

sort idci datem
xtset idci datem

gen LocalSub = (ForeignHQ==1)*(Foreign==0)

foreach var in cpi gdp {
	
	foreach hor in current future {
		
		if "`hor'" == "current" {
			local time "t"
		}
		else if "`hor'" == "future"{
			local time "t+1"
		}
		
		if "`var'" == "cpi" {
			local capvar " $ \text{CPI}_{`time'} $ "
		}
		else if  "`var'" == "gdp" {
			local capvar " $ \text{GDP}_{`time'} $ "
		}
		
		
		* Fixed Effects:
		local FE country_num#datem idi#datem 
		local se cluster country_num idi datem 
		reghdfe labs_FE_`var'_`hor'_a1 Foreign LocalSub if Mult==1, absorb(`FE') vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE", replace  ///
			addlabel(rhs,"`capvar'" , FE1, "", FE2, "", FE3, "", FE4, "\checkmark", FE5, "\checkmark", FE6, "\checkmark", FE7, "") table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
			
	}
}



* combine results for cpi and gdp:
use $temp_data/reg_labs_cpi_current_FE.dta, clear
g database = 1
append using $temp_data/reg_labs_gdp_current_FE
replace database = 2 if database == .
append using $temp_data/reg_labs_cpi_future_FE
replace database = 3 if database == .
append using $temp_data/reg_labs_gdp_future_FE
replace database = 4 if database == .
g n = _n
rename col_1 col_7
	
* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

* Fill up indicator variable:
gen indicator = col_7 if var == "rhs"
qui sort database indicator
by database indicator: replace indicator = indicator[_n-1] if indicator == "" 
qui gsort database -indicator
by database : replace indicator = indicator[_n-1] if indicator == ""

sort database n
bysort database: g count = _n 
replace indicator = "" if count >1

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - (7 +3)

drop if var == "rhs"
drop database n count noverall
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

replace var = "Country, For., Month FE" if var == "FE1"
replace var = "Country $ \times $ Year FE" if var == "FE2"
replace var = "Forecaster $ \times $ Year FE " if var == "FE3"
replace var = "Country $ \times $ Date FE" if var == "FE4"
replace var = "Forecaster $ \times $ Date FE " if var == "FE5"
replace var = "Subsample 1" if var == "FE6"
replace var = "Subsample 2" if var == "FE7"

order indicator

label var indicator "Variable"
label var var "Coefficient"
label var col_7 ""

save $temp_data/reg_labs_mult_sub, replace


* --------------------------
**# Regressions log(abs) for distinct updates
* ----------------------

use $data/baseline.dta, clear

sort idci datem
xtset idci datem
replace labs_FE_cpi_current_a1 = . if l.cpi_current == cpi_current & month != 1
replace labs_FE_cpi_current_a1 = . if l.cpi_future == cpi_current & month == 1
replace labs_FE_gdp_current_a1 = . if l.gdp_current == gdp_current & month != 1
replace labs_FE_gdp_current_a1 = . if l.gdp_current == gdp_current & month == 1
replace labs_FE_cpi_future_a1 = . if l.cpi_future == cpi_future & month != 1
replace labs_FE_gdp_future_a1 = . if l.gdp_future == gdp_future & month != 1

foreach var in cpi gdp  {
	
	foreach hor in current future {
		
		if "`hor'" == "current" {
			local time "t"
		}
		else if "`hor'" == "future"{
			local time "t+1"
		}
		
		if "`var'" == "cpi" {
			local capvar " $ \text{CPI}_{`time'} $ "
		}
		else if  "`var'" == "gdp" {
			local capvar " $ \text{GDP}_{`time'} $ "
		}
		
		
		* Fixed Effects:
		local FE idi#datem country_num#datem
		local se cluster idi datem country_num
		reghdfe labs_FE_`var'_`hor'_a1 Foreign, absorb(`FE') vce(`se')
		regsave using "$temp_data/reg_labs_`var'_`hor'_FE", replace  ///
			addlabel(rhs,"`capvar'" , FE1, "", FE2, "", FE3, "", FE4, "\checkmark", FE5, "\checkmark", FE6, "\checkmark", FE7, "") table(col_1, asterisk(10 5 1) parentheses(stderr) format(%7.2f))
			
	}
}



* combine results for cpi and gdp:
use $temp_data/reg_labs_cpi_current_FE.dta, clear
g database = 1
append using $temp_data/reg_labs_gdp_current_FE
replace database = 2 if database == .
append using $temp_data/reg_labs_cpi_future_FE
replace database = 3 if database == .
append using $temp_data/reg_labs_gdp_future_FE
replace database = 4 if database == .
g n = _n
rename col_1 col_8
	
* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

* Fill up indicator variable:
gen indicator = col_8 if var == "rhs"
qui sort database indicator
by database indicator: replace indicator = indicator[_n-1] if indicator == "" 
qui gsort database -indicator
by database : replace indicator = indicator[_n-1] if indicator == ""

sort database n
bysort database: g count = _n 
replace indicator = "" if count >1

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - (7 +3)

drop if var == "rhs"
drop database n count noverall
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

replace var = "Country, For., Month FE" if var == "FE1"
replace var = "Country $ \times $ Year FE" if var == "FE2"
replace var = "Forecaster $ \times $ Year FE " if var == "FE3"
replace var = "Country $ \times $ Date FE" if var == "FE4"
replace var = "Forecaster $ \times $ Date FE " if var == "FE5"
replace var = "Subsample 1" if var == "FE6"
replace var = "Subsample 2" if var == "FE7"

order indicator

label var indicator "Variable"
label var var "Coefficient"
label var col_8 ""

save $temp_data/reg_labs_distinct, replace

* --------------------------
**# Table updating and errors
* --------------------------

use $temp_data/reg_updating, clear

merge 1:1 _n using $temp_data/reg_lsd, nogen
merge 1:1 _n using $temp_data/reg_labs, nogen
merge 1:1 _n using $temp_data/reg_labs_non_mult, nogen
merge 1:1 _n using $temp_data/reg_labs_mult, nogen // QUESTION HERE WHICH ONE TO TAKE.
merge 1:1 _n using $temp_data/reg_labs_distinct, nogen

gen n = _n
set obs 31
replace n = 2.1 if _n == 24
replace n = 2.2 if _n == 25
replace n = 6.1 if _n == 26
replace n = 6.2 if _n == 27
replace n = 10.1 if _n == 28
replace n = 10.2 if _n == 29
replace n = 14.1 if _n == 30
replace n = 14.2 if _n == 31

replace var = "Local Subsidiary" if _n == 24 | n == 26 | n== 28 | n == 30

sort n

merge 1:1 _n using $temp_data/reg_labs_mult_sub, nogen
drop n

gen col_9 = .
label var col_9 ""
gen col_10 = .
label var col_10 ""

label var col_2 "Distinct updates"
label var col_8 "Distinct updates"

drop if _n > 29

preserve
drop if _n>12 & _n<23
texsave indicator var col_1 col_2 col_9 col_3 col_10 col_4-col_7 using "$tables/tab_updating_errors_main.tex", ///
	title(Forecast Errors, Updating, and the Location of the Forecaster) varlabels nofix hlines(0) headersep(0pt) ///
	headerlines("{}&{}&\multicolumn{2}{c}{$\ln(N_{ijt})$}&&{$\ln(\sigma^m_{\text{FE},i,j})$}&&\multicolumn{4}{c}{$\ln(|Error_{ijt,t}^m|)$} \tabularnewline \cline{3-4} \cline{6-6} \cline{8-11} \tabularnewline &&{(1)}&{(2)}&&{(3)}&&{(4)}&{(5)}&{(6)}&{(7)}") ///
frag  size(footnotesize)  align(l l C C m{0.01\textwidth} C m{0.01\textwidth} C C C C) location(H) replace label(tab:updating_errors_main) footnote("\begin{minipage}{1\linewidth} \vspace{-10pt} \begin{tabnote} \textit{Notes:} Columns (1) and (2) show the results of regression of the number of forecast updates within a year on the location of the forecaster. Column (3) shows the regression of the log standard deviation of the errors on the location of the forecaster. Columns (4) to (7) show the regression of the log absolute forecast error on the location of the forecaster. Standard errors are clustered at the country and forecaster level in columns (1) to (3), and at the country, forecaster and date level in columns (4) to (7). \end{tabnote} \end{minipage}  ") 
restore

preserve
drop if _n<13
texsave indicator var col_3 col_9 col_4-col_6 col_10 col_1 col_2 col_7 using "$tables/tab_updating_errors_app.tex", ///
	title(Forecast Errors, Updating, and the Location of the Forecaster - Future year) varlabels nofix hlines(0) headersep(0pt) ///
	headerlines("{}&{}&{$\ln(\sigma^m_{\text{FE},i,j})$}&&\multicolumn{3}{c}{$\ln(|Error_{ijt+1,t}^m|)$}&&\multicolumn{3}{c}{$\ln(N_{ijt})$} \tabularnewline \cline{3-3} \cline{5-7} \cline{9-11} \tabularnewline &&{(1)}&&{(2)}&{(3)}&{(4)}&&{(5)}&{(6)}&{(7)}") ///
frag  size(footnotesize)  align(l l C m{0.01\textwidth} C C C m{0.01\textwidth} C C C) location(H) replace label(tab:updating_errors_app) footnote("\begin{minipage}{1\linewidth} \vspace{-10pt} \begin{tabnote} \textit{Notes:} Column (1) shows the regression of the log standard deviation of the errors on the location of the forecaster. Columns (2) to (4) show the regression of the log absolute forecast error on the location of the forecaster. Columns (5) and (7) show the results of regression of the number of forecast updates within a year on the location of the forecaster. Subsample 1 is restricted to the forecasts that are distinct from their last release. Subsample 2 is restricted to the forecasters that produce both local and foreign forecasts. Standard errors are clustered at the country and forecaster level in columns (1) and (5) to (7), and at the country, forecaster and date level in columns (2) to (4). \end{tabnote} \end{minipage}  ") 
restore

* parcimonious

preserve
drop if (_n>12 & _n<25) | _n==3 | _n==4 | _n==9 | _n==10
texsave indicator var col_3 col_9 col_4 col_8 col_10 col_1 col_2 using "$tables/tab_updating_errors_main_small.tex", ///
	title(Forecast Errors, Updating, and the Location of the Forecaster - Forecasts on the Current Year) varlabels nofix hlines(0) headersep(0pt) ///
	headerlines("{}&{}&{$\ln(\sigma^m_{\text{FE},i,j})$}&&\multicolumn{2}{c}{$\ln(|Error_{ijt,t}^m|)$}&&\multicolumn{2}{c}{$\ln(N_{ijt})$} \tabularnewline \cline{3-3} \cline{5-6} \cline{8-9} \tabularnewline &&{(1)}&&{(2)}&{(3)}&&{(4)}&{(5)}") ///
frag  size(footnotesize)  align(l l C m{0.01\textwidth} C C m{0.01\textwidth} C C ) location(H) replace label(tab:updating_errors_main_small) footnote("\begin{minipage}{1\linewidth} \vspace{-10pt} \begin{tabnote} \textit{Notes:} Column (1) shows the regression of the log standard deviation of the errors on the location of the forecaster. Columns (2) and (3) show the regression of the log absolute forecast error on the location of the forecaster. Columns (4) and (5)) show the results of regression of the number of forecast updates within a year on the location of the forecaster. Standard errors are clustered at the country and forecaster level in columns (1), (4) and (5), and at the country, forecaster and date level in Columns (2) and (3). In Columns (3) and (5), the sample is restricted to the published forecasts that are distinct from the last published one. \end{tabnote} \end{minipage}  ") 
restore

preserve
drop if _n<13 | _n==15 | _n==16 | _n==21 | _n==22
texsave indicator var col_3 col_9 col_4 col_8 col_10 col_1 col_2 using "$tables/tab_updating_errors_app_small.tex", ///
	title(Forecast Errors, Updating, and the Location of the Forecaster - Forecasts on the Future Year) varlabels nofix hlines(0) headersep(0pt) ///
	headerlines("{}&{}&{$\ln(\sigma^m_{\text{FE},i,j})$}&&\multicolumn{2}{c}{$\ln(|Error_{ijt,t}^m|)$}&&\multicolumn{2}{c}{$\ln(N_{ijt})$} \tabularnewline \cline{3-3} \cline{5-6} \cline{8-9} \tabularnewline &&{(1)}&&{(2)}&{(3)}&&{(4)}&{(5)}") ///
frag  size(footnotesize)  align(l l C m{0.01\textwidth} C C m{0.01\textwidth} C C ) location(H) replace label(tab:updating_errors_app_small) footnote("\begin{minipage}{1\linewidth} \vspace{-10pt} \begin{tabnote} \textit{Notes:} Column (1) shows the regression of the log standard deviation of the errors on the location of the forecaster. Columns (2) and (3) show the regression of the log absolute forecast error on the location of the forecaster. Columns (4) and (5)) show the results of regression of the number of forecast updates within a year on the location of the forecaster. Standard errors are clustered at the country and forecaster level in columns (1), (4) and (5), and at the country, forecaster and date level in Columns (2) and (3). In Columns (3) and (5), the sample is restricted to the published forecasts that are distinct from the last published one. \end{tabnote} \end{minipage}  ") 
restore







********************
* Robustness
********************

*** log(std error) *****

* combine results for cpi and gdp:
use $temp_data/stderr_cpi_current_FE_rob.dta, clear
g database = 1
append using $temp_data/stderr_gdp_current_FE_rob
replace database = 2 if database == .

g n = _n
	
* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

* Fill up indicator variable:
gen indicator = col_4 if var == "rhs"
qui sort database indicator
by database indicator: replace indicator = indicator[_n-1] if indicator == "" 
qui gsort database -indicator
by database : replace indicator = indicator[_n-1] if indicator == ""

sort database n
bysort database: g count = _n 
replace indicator = "" if count >1

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - 4

drop if var == "rhs"
drop database n count noverall
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

replace var = "Country FE" if var == "FE1"
replace var = "Forecaster FE" if var == "FE2"
replace var = "Month FE" if var == "FE3"


order indicator

label var indicator "Variable"
label var var "Coefficient"
label var col_1 ""
label var col_2 ""
label var col_3 ""
label var col_4 ""

save $temp_data/stderr_rob, replace


texsave indicator var col_1-col_4 using "$tables/tab_stderr_rob.tex", ///
	title(Standard Deviation of Forecast Errors and the Location of the Forecaster - Alternative fixed effects) varlabels nofix hlines(0) headersep(0pt) ///
	headerlines("&&\multicolumn{4}{c}{$\ln(\sigma^m_{\text{FE},i,j})$} \tabularnewline \cline{3-6} &\multicolumn{4}{c}{}& \multicolumn{1}{c}{Baseline}  \tabularnewline \cline{6-6} \tabularnewline &&{(1)}&{(2)}&{(3)}&{(4)}") ///
frag  size(footnotesize)  align(l l C C C C) location(H) replace label(tab:tab_stderr_rob) footnote("\begin{minipage}{1\linewidth} \vspace{-10pt} \begin{tabnote} \textit{Notes:} Columns (1) to (4) show the regression of the log standard deviation of the errors on the location of the forecaster with different fixed-effect specifications. Standard errors are clustered at the country and forecaster levels. \end{tabnote} \end{minipage}  ") 



*** labs *****

* combine results for cpi and gdp:
use $temp_data/reg_labs_cpi_current_FE_rob.dta, clear
g database = 1
append using $temp_data/reg_labs_gdp_current_FE_rob
replace database = 2 if database == .

g n = _n
	
* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

* Fill up indicator variable:
gen indicator = col_4 if var == "rhs"
qui sort database indicator
by database indicator: replace indicator = indicator[_n-1] if indicator == "" 
qui gsort database -indicator
by database : replace indicator = indicator[_n-1] if indicator == ""

sort database n
bysort database: g count = _n 
replace indicator = "" if count >1

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - 4

drop if var == "rhs"
drop database n count noverall
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

replace var = "Country FE" if var == "FE1"
replace var = "Forecaster FE" if var == "FE2"
replace var = "Country $ \times $ Date FE" if var == "FE3"
replace var = "Forecaster $ \times $ Date FE " if var == "FE4"


order indicator

label var indicator "Variable"
label var var "Coefficient"
label var col_1 ""
label var col_2 ""
label var col_3 ""
label var col_4 ""
label var col_5 ""

save $temp_data/reg_labs_rob, replace


texsave indicator var col_1-col_5 using "$tables/tab_errors_rob.tex", ///
	title(Absolute Forecast Errors and the Location of the Forecaster - Alternative fixed effects) varlabels nofix hlines(0) headersep(0pt) ///
	headerlines("&&\multicolumn{5}{c}{$\ln(|Error_{ijt,t}^m|)$} \tabularnewline \cline{3-7} &\multicolumn{5}{c}{}& \multicolumn{1}{c}{Baseline}  \tabularnewline \cline{7-7} \tabularnewline &&{(1)}&{(2)}&{(3)}&{(4)}&{(5)}") ///
frag  size(footnotesize)  align(l l C C C C C) location(H) replace label(tab:tab_errors_rob) footnote("\begin{minipage}{1\linewidth} \vspace{-10pt} \begin{tabnote} \textit{Notes:} Columns (1) to (5) show the regression of the log absolute forecast error on the location of the forecaster with different fixed-effect specifications. Standard errors are clustered at the country, forecaster and date level. \end{tabnote} \end{minipage}  ") 



*** updating *****


* combine results for cpi and gdp:
use $temp_data/reg_update_cpi_current_FE1_rob.dta, clear
g database = 1
append using $temp_data/reg_update_gdp_current_FE1_rob
replace database = 2 if database == .

g n = _n
	
* clean the data
drop if var == "restr" | var == "_id" | strpos(var,"_cons")>0

* Fill up indicator variable:
gen indicator = col_4 if var == "rhs"
qui sort database indicator
by database indicator: replace indicator = indicator[_n-1] if indicator == "" 
qui gsort database -indicator
by database : replace indicator = indicator[_n-1] if indicator == ""

sort database n
bysort database: g count = _n 
replace indicator = "" if count >1

g noverall = _n
su noverall
local max = r(max)
drop if strpos(var,"FE") &  noverall < `max' - 4

drop if var == "rhs"
drop database n count noverall
replace var = "$ R^2 $" if var == "r2"

replace var = "Foreign" if var == "Foreign_coef"
replace var = "" if var == "Foreign_stderr"

replace var = "Country FE" if var == "FE1"
replace var = "Forecaster FE" if var == "FE2"
replace var = "Country $ \times $ Year FE" if var == "FE3"
replace var = "Forecaster $ \times $ Year FE " if var == "FE4"


order indicator

label var indicator "Variable"
label var var "Coefficient"
label var col_1 ""
label var col_2 ""
label var col_3 ""
label var col_4 ""
label var col_5 ""

save $temp_data/reg_labs_rob, replace


texsave indicator var col_1-col_5 using "$tables/tab_updating_rob.tex", ///
	title(Updating and the Location of the Forecaster - Alternative fixed effects) varlabels nofix hlines(0) headersep(0pt) ///
	headerlines("&&\multicolumn{5}{c}{$\ln(N_{ijt})$} \tabularnewline \cline{3-7} &\multicolumn{5}{c}{}& \multicolumn{1}{c}{Baseline}  \tabularnewline \cline{7-7} \tabularnewline &&{(1)}&{(2)}&{(3)}&{(4)}&{(5)}") ///
frag  size(footnotesize)  align(l l C C C C C) location(H) replace label(tab:tab_updating_rob) footnote("\begin{minipage}{1\linewidth} \vspace{-10pt} \begin{tabnote} \textit{Notes:} Columns (1) to (5) show the regression of the number of forecast updates within a year on the location of the forecaster with different fixed-effect specifications. Standard errors are clustered at the country and forecaster levels. \end{tabnote} \end{minipage}  ") 



